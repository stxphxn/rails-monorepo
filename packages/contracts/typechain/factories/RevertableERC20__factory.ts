/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RevertableERC20,
  RevertableERC20Interface,
} from "../RevertableERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldRevert",
        type: "bool",
      },
    ],
    name: "setShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005805460ff191690553480156200001b57600080fd5b50604080518082018252600a8152692a32b9ba102a37b5b2b760b11b602080830191825283518085019094526004845263151154d560e21b9084015281519192916200006a916003916200018c565b508051620000809060049060208401906200018c565b5050506200009f3369d3c21bcecceda1000000620000a560201b60201c565b620002d4565b6001600160a01b038216620000d75760405162461bcd60e51b8152600401620000ce9062000232565b60405180910390fd5b620000e56000838362000187565b8060026000828254620000f9919062000272565b90915550506001600160a01b038216600090815260208190526040812080548392906200012890849062000272565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200016d90859062000269565b60405180910390a3620001836000838362000187565b5050565b505050565b8280546200019a9062000297565b90600052602060002090601f016020900481019282620001be576000855562000209565b82601f10620001d957805160ff191683800117855562000209565b8280016001018555821562000209579182015b8281111562000209578251825591602001919060010190620001ec565b50620002179291506200021b565b5090565b5b808211156200021757600081556001016200021c565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200029257634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680620002ac57607f821691505b60208210811415620002ce57634e487b7160e01b600052602260045260246000fd5b50919050565b610e6b80620002e46000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636813d78711610097578063a457c2d711610066578063a457c2d7146101de578063a9059cbb146101f1578063d3072d8214610204578063dd62ed3e1461020c576100f5565b80636813d7871461019d57806370a08231146101b057806395d89b41146101c35780639dc29fac146101cb576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806340c10f1914610188576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b61010261021f565b60405161010f91906109d8565b60405180910390f35b61012b610126366004610984565b6102b1565b60405161010f91906109cd565b6101406102ce565b60405161010f9190610dc7565b61012b61015b366004610949565b6102d4565b61016861036d565b60405161010f9190610dd0565b61012b610183366004610984565b610372565b61019b610196366004610984565b6103c6565b005b61019b6101ab3660046109ad565b6103f7565b6101406101be3660046108f6565b61040a565b610102610429565b61019b6101d9366004610984565b610438565b61012b6101ec366004610984565b610465565b61012b6101ff366004610984565b6104de565b61012b61050f565b61014061021a366004610917565b610518565b60606003805461022e90610e0d565b80601f016020809104026020016040519081016040528092919081815260200182805461025a90610e0d565b80156102a75780601f1061027c576101008083540402835291602001916102a7565b820191906000526020600020905b81548152906001019060200180831161028a57829003601f168201915b5050505050905090565b60006102c56102be610543565b8484610547565b50600192915050565b60025490565b60006102e18484846105fb565b6001600160a01b038416600090815260016020526040812081610302610543565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561034e5760405162461bcd60e51b815260040161034590610bbd565b60405180910390fd5b6103628561035a610543565b858403610547565b506001949350505050565b601290565b60006102c561037f610543565b84846001600061038d610543565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103c19190610dde565b610547565b60055460ff16156103e95760405162461bcd60e51b815260040161034590610cb8565b6103f38282610725565b5050565b6005805460ff1916911515919091179055565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461022e90610e0d565b60055460ff161561045b5760405162461bcd60e51b815260040161034590610ab0565b6103f382826107ed565b60008060016000610474610543565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104c05760405162461bcd60e51b815260040161034590610d33565b6104d46104cb610543565b85858403610547565b5060019392505050565b60055460009060ff16156105045760405162461bcd60e51b815260040161034590610b29565b6102c53384846105fb565b60055460ff1681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661056d5760405162461bcd60e51b815260040161034590610cef565b6001600160a01b0382166105935760405162461bcd60e51b815260040161034590610ae7565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105ee908590610dc7565b60405180910390a3505050565b6001600160a01b0383166106215760405162461bcd60e51b815260040161034590610c5b565b6001600160a01b0382166106475760405162461bcd60e51b815260040161034590610a2b565b6106528383836108da565b6001600160a01b0383166000908152602081905260409020548181101561068b5760405162461bcd60e51b815260040161034590610b60565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106c2908490610dde565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070c9190610dc7565b60405180910390a361071f8484846108da565b50505050565b6001600160a01b03821661074b5760405162461bcd60e51b815260040161034590610d90565b610757600083836108da565b80600260008282546107699190610dde565b90915550506001600160a01b03821660009081526020819052604081208054839290610796908490610dde565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107d9908590610dc7565b60405180910390a36103f3600083836108da565b6001600160a01b0382166108135760405162461bcd60e51b815260040161034590610c1a565b61081f826000836108da565b6001600160a01b038216600090815260208190526040902054818110156108585760405162461bcd60e51b815260040161034590610a6e565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610887908490610df6565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108ca908690610dc7565b60405180910390a36108da836000845b505050565b80356001600160a01b038116811461042457600080fd5b600060208284031215610907578081fd5b610910826108df565b9392505050565b60008060408385031215610929578081fd5b610932836108df565b9150610940602084016108df565b90509250929050565b60008060006060848603121561095d578081fd5b610966846108df565b9250610974602085016108df565b9150604084013590509250925092565b60008060408385031215610996578182fd5b61099f836108df565b946020939093013593505050565b6000602082840312156109be578081fd5b81358015158114610910578182fd5b901515815260200190565b6000602080835283518082850152825b81811015610a04578581018301518582016040015282016109e8565b81811115610a155783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526013908201527f6275726e3a2053484f554c445f52455645525400000000000000000000000000604082015260600190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526017908201527f7472616e736665723a2053484f554c445f524556455254000000000000000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160408201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526013908201527f6d696e743a2053484f554c445f52455645525400000000000000000000000000604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610df157610df1610e48565b500190565b600082821015610e0857610e08610e48565b500390565b600281046001821680610e2157607f821691505b60208210811415610e4257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000800000a";

type RevertableERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevertableERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevertableERC20__factory extends ContractFactory {
  constructor(...args: RevertableERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevertableERC20> {
    return super.deploy(overrides || {}) as Promise<RevertableERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RevertableERC20 {
    return super.attach(address) as RevertableERC20;
  }
  connect(signer: Signer): RevertableERC20__factory {
    return super.connect(signer) as RevertableERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevertableERC20Interface {
    return new utils.Interface(_abi) as RevertableERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevertableERC20 {
    return new Contract(address, _abi, signerOrProvider) as RevertableERC20;
  }
}
